// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AvatyeAdCash
import AdPopcornSSP
import AdSupport
import AppTrackingTransparency
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol InterAdModuleDelegate : AnyObject {
  func onInterModuleLoad()
  func onInterModuleFail(error: AvatyeAdCash.AdCashErrorModel)
  func onInterModuleClosed()
  func onInterModuleClick()
  func onInterModuleOpen()
}
@objc public enum LogLevel : Swift.Int, Swift.CustomStringConvertible {
  case debug = 1
  case info = 2
  case error = 3
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objcMembers public class AdCashLogger {
  @objc public static func debug(_ message: Swift.String, file: Swift.String = #file, line: Swift.Int = #line, function: Swift.String = #function)
  @objc public static func info(_ message: Swift.String, file: Swift.String = #file, line: Swift.Int = #line, function: Swift.String = #function)
  @objc public static func error(_ message: Swift.String, file: Swift.String = #file, line: Swift.Int = #line, function: Swift.String = #function)
  @objc deinit
}
@objc public protocol NativeAdLoaderDelegate {
  @objc func onNativeLoaded(_ apid: Swift.String, adView: UIKit.UIView)
  @objc func onNativeFailed(_ apid: Swift.String, error: AvatyeAdCash.AdCashErrorModel)
  @objc func onNativeClicked(_ apid: Swift.String)
}
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor(unsafe) public class AdCashDefault : AdPopcornSSPNativeAd {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init!(frame: CoreFoundation.CGRect, key appKey: Swift.String!, placementId: Swift.String!, viewController: UIKit.UIViewController!)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @objcMembers public class NativeAdLoader : ObjectiveC.NSObject {
  @objc public var delegate: (any AvatyeAdCash.NativeAdLoaderDelegate)?
  @objc public init(rootVC: UIKit.UIViewController, placementId: Swift.String, nativeAd: AvatyeAdCash.AdCashDefault)
  @objc @discardableResult
  public func setConfig(appId: Swift.String, appSecretKey: Swift.String) -> Self
  @objc public func requestAd()
  @objc deinit
}
extension AvatyeAdCash.NativeAdLoader {
  @objc dynamic public func setGAMNativeAd(xibNamed: Swift.String)
  @objc dynamic public func setNAMNativeAd(xibNamed: Swift.String)
  @objc dynamic public func setNativeAd(adPopAdapter: AvatyeAdCash.AdPopAdapter)
}
extension AvatyeAdCash.NativeAdLoader : APSSPNativeAdDelegate {
  @objc dynamic public func apsspNativeAdClicked(_ nativeAd: AdPopcornSSPNativeAd!)
  @objc dynamic public func apsspNativeAdImpression(_ nativeAd: AdPopcornSSPNativeAd!)
  @objc dynamic public func apsspNativeAdLoadSuccess(_ nativeAd: AdPopcornSSPNativeAd!)
  @objc dynamic public func apsspNativeAdLoadFail(_ nativeAd: AdPopcornSSPNativeAd!, error: AdPopcornSSPError!)
}
@objc @_hasMissingDesignatedInitializers @objcMembers public class AdCashErrorModel : ObjectiveC.NSObject {
  @objc final public let code: Swift.Int
  @objc final public let type: Swift.String
  @objc final public let message: Swift.String
  @objc final public let desc: Swift.String
  @objc deinit
}
public struct AppAdUnitInput : Swift.Codable {
  public let appID: Swift.String
  public let placementID: Swift.String
  public init(aid: Swift.String, pid: Swift.String)
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct PlacementModel : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct AppAdUnitModel : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct AdUnitNetworkInput : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public struct AdUnitNetwork : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public protocol AdViewDelegate : AnyObject {
  func onViewLoad(adView: UIKit.UIView)
  func onViewFailed(error: AvatyeAdCash.AdCashErrorModel)
  func onViewClicked()
}
@objc public enum BannerAdSize : Swift.Int {
  case W320XH50
  case W320XH100
  case W300XH250
  case DYNAMIC
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public enum HouseBannerAdSize {
  case W320XH50
  case W320XH100
  case W300XH250
  case W320XH480
  public static func == (a: AvatyeAdCash.HouseBannerAdSize, b: AvatyeAdCash.HouseBannerAdSize) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum InterAdType {
  case INTERSTITIAL
  case INTERSTITIAL_BOX
  case INTERSTITIAL_VIDEO
  case INTERSTITIAL_REWARD_VIDEO
  case INTERSTITIAL_HOUSE
  case INTERSTITIAL_NATIVE
  public static func == (a: AvatyeAdCash.InterAdType, b: AvatyeAdCash.InterAdType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum CustomInterAdType {
  case INTERSTITIAL_BOX
  case INTERSTITIAL_HOUSE
  case INTERSTITIAL_NATIVE
  public static func == (a: AvatyeAdCash.CustomInterAdType, b: AvatyeAdCash.CustomInterAdType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc public protocol BannerAdWidgetDelegate {
  @objc func onBannerLoaded(_ apid: Swift.String)
  @objc func onBannerFailed(_ apid: Swift.String, error: AvatyeAdCash.AdCashErrorModel)
  @objc func onBannerClicked(_ apid: Swift.String)
  @objc func onBannerRemoved(_ apid: Swift.String)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(AVABannerAdView) @_Concurrency.MainActor(unsafe) public class BannerAdView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) weak public var delegate: (any AvatyeAdCash.BannerAdWidgetDelegate)?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @discardableResult
  @objc @_Concurrency.MainActor(unsafe) public func setConfig(appId: Swift.String, appSecretKey: Swift.String) -> Self
  @objc @_Concurrency.MainActor(unsafe) public func setBannerAd(rootVC: UIKit.UIViewController, placementId: Swift.String, size: AvatyeAdCash.BannerAdSize)
  @objc @_Concurrency.MainActor(unsafe) public func requestAd()
  @objc @_Concurrency.MainActor(unsafe) public func removeAd()
  @objc @_Concurrency.MainActor(unsafe) public func releaseAd()
  @objc deinit
}
extension AvatyeAdCash.BannerAdView : AvatyeAdCash.BannerAdLoaderDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func onBannerLoaded(_ apid: Swift.String, adView: UIKit.UIView, size: CoreFoundation.CGSize)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func onBannerFailed(_ apid: Swift.String, error: AvatyeAdCash.AdCashErrorModel)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func onBannerClicked(_ apid: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func onBannerRemoved(_ apid: Swift.String)
}
@objc public protocol BannerAdLoaderDelegate : ObjectiveC.NSObjectProtocol {
  @objc func onBannerLoaded(_ apid: Swift.String, adView: UIKit.UIView, size: CoreFoundation.CGSize)
  @objc func onBannerFailed(_ apid: Swift.String, error: AvatyeAdCash.AdCashErrorModel)
  @objc func onBannerClicked(_ apid: Swift.String)
  @objc func onBannerRemoved(_ apid: Swift.String)
}
@objc(AVABannerAdLoader) public class BannerAdLoader : ObjectiveC.NSObject {
  @objc weak public var delegate: (any AvatyeAdCash.BannerAdLoaderDelegate)?
  @objc public init(rootVC: UIKit.UIViewController, placementId: Swift.String, size: AvatyeAdCash.BannerAdSize, adView: UIKit.UIView? = nil)
  @discardableResult
  @objc public func setConfig(appId: Swift.String, appSecretKey: Swift.String) -> Self
  @objc public func requestAd()
  @objc public func removeAd()
  @objc deinit
}
extension AvatyeAdCash.BannerAdLoader : AvatyeAdCash.AdViewDelegate {
  public func onViewLoad(adView: UIKit.UIView)
  public func onViewFailed(error: AvatyeAdCash.AdCashErrorModel)
  public func onViewClicked()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class AdCashInit : ObjectiveC.NSObject {
  @objc public static func setting(appId: Swift.String, appSecretKey: Swift.String, logLevel: AvatyeAdCash.LogLevel = .info)
  @objc public static func avatyeSetting(logLevel: AvatyeAdCash.LogLevel = .info)
  @objc public static func devModeChange(value: Swift.String? = nil)
  @objc public static func trackSetting()
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol InterstitialAdDelegate : ObjectiveC.NSObjectProtocol {
  @objc func onInterstitalLoaded(_ apid: Swift.String)
  @objc func onInterstitalOpened(_ apid: Swift.String)
  @objc func onInterstitalClosed(_ apid: Swift.String, isCompleted: Swift.Bool)
  @objc func onInterstitalFailed(_ apid: Swift.String, error: AvatyeAdCash.AdCashErrorModel)
  @objc func onInterstitalClicked(_ apid: Swift.String)
}
@objc(AVAInterstitialAdLoader) public class InterstitialAdLoader : ObjectiveC.NSObject {
  @objc public var delegate: (any AvatyeAdCash.InterstitialAdDelegate)?
  @objc public init(placementId: Swift.String, rootViewController: UIKit.UIViewController)
  @discardableResult
  @objc public func setConfig(appId: Swift.String, appSecretKey: Swift.String) -> Self
  @objc public func requestAd()
  @objc deinit
}
extension AvatyeAdCash.InterstitialAdLoader : APSSPInterstitialAdDelegate {
  @objc dynamic public func apsspInterstitialAdClosed(_ interstitialAd: AdPopcornSSPInterstitialAd!)
  @objc dynamic public func apsspInterstitialAdClicked(_ interstitialAd: AdPopcornSSPInterstitialAd!)
  @objc dynamic public func apsspInterstitialAdLoadSuccess(_ interstitialAd: AdPopcornSSPInterstitialAd!)
  @objc dynamic public func apsspInterstitialAdShowSuccess(_ interstitialAd: AdPopcornSSPInterstitialAd!)
  @objc dynamic public func apsspInterstitialAdLoadFail(_ interstitialAd: AdPopcornSSPInterstitialAd!, error: AdPopcornSSPError!)
  @objc dynamic public func apsspInterstitialAdShowFail(_ interstitialAd: AdPopcornSSPInterstitialAd!, error: AdPopcornSSPError!)
}
extension AvatyeAdCash.InterstitialAdLoader : APSSPInterstitialVideoAdDelegate {
  @objc dynamic public func apsspInterstitialVideoAdClosed(_ interstitialVideoAd: AdPopcornSSPInterstitialVideoAd!)
  @objc dynamic public func apsspInterstitialVideoAdShowFail(_ interstitialVideoAd: AdPopcornSSPInterstitialVideoAd!)
  @objc dynamic public func apsspInterstitialVideoAdLoadSuccess(_ interstitialVideoAd: AdPopcornSSPInterstitialVideoAd!)
  @objc dynamic public func apsspInterstitialVideoAdShowSuccess(_ interstitialVideoAd: AdPopcornSSPInterstitialVideoAd!)
  @objc dynamic public func apsspInterstitialVideoAdLoadFail(_ interstitialVideoAd: AdPopcornSSPInterstitialVideoAd!, error: AdPopcornSSPError!)
}
extension AvatyeAdCash.InterstitialAdLoader : APSSPRewardVideoAdDelegate {
  @objc dynamic public func apsspRewardVideoAdClosed(_ rewardVideoAd: AdPopcornSSPRewardVideoAd!)
  @objc dynamic public func apsspRewardVideoAdShowFail(_ rewardVideoAd: AdPopcornSSPRewardVideoAd!)
  @objc dynamic public func apsspRewardVideoAdLoadSuccess(_ rewardVideoAd: AdPopcornSSPRewardVideoAd!)
  @objc dynamic public func apsspRewardVideoAdShowSuccess(_ rewardVideoAd: AdPopcornSSPRewardVideoAd!)
  @objc dynamic public func apsspRewardVideoAdLoadFail(_ rewardVideoAd: AdPopcornSSPRewardVideoAd!, error: AdPopcornSSPError!)
  @objc dynamic public func apsspRewardVideoAdPlayCompleted(_ rewardVideoAd: AdPopcornSSPRewardVideoAd!, adNetworkNo: Swift.Int, completed: Swift.Bool)
}
extension AvatyeAdCash.InterstitialAdLoader : AvatyeAdCash.InterAdModuleDelegate {
  public func onInterModuleOpen()
  public func onInterModuleLoad()
  public func onInterModuleFail(error: AvatyeAdCash.AdCashErrorModel)
  public func onInterModuleClosed()
  public func onInterModuleClick()
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class AdPopAdapter : UIKit.UIView {
  @discardableResult
  @_Concurrency.MainActor(unsafe) public func setIcon(_ icon: UIKit.UIImageView) -> Self
  @discardableResult
  @_Concurrency.MainActor(unsafe) public func setTitle(_ title: UIKit.UILabel) -> Self
  @discardableResult
  @_Concurrency.MainActor(unsafe) public func setDesc(_ desc: UIKit.UILabel) -> Self
  @discardableResult
  @_Concurrency.MainActor(unsafe) public func setMainImage(_ mainImage: UIKit.UIImageView) -> Self
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension AvatyeAdCash.LogLevel : Swift.Equatable {}
extension AvatyeAdCash.LogLevel : Swift.Hashable {}
extension AvatyeAdCash.LogLevel : Swift.RawRepresentable {}
extension AvatyeAdCash.BannerAdSize : Swift.Equatable {}
extension AvatyeAdCash.BannerAdSize : Swift.Hashable {}
extension AvatyeAdCash.BannerAdSize : Swift.RawRepresentable {}
extension AvatyeAdCash.HouseBannerAdSize : Swift.Equatable {}
extension AvatyeAdCash.HouseBannerAdSize : Swift.Hashable {}
extension AvatyeAdCash.InterAdType : Swift.Equatable {}
extension AvatyeAdCash.InterAdType : Swift.Hashable {}
extension AvatyeAdCash.CustomInterAdType : Swift.Equatable {}
extension AvatyeAdCash.CustomInterAdType : Swift.Hashable {}
